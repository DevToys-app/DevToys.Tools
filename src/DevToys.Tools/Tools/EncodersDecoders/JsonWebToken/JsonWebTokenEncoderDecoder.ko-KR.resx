<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessibleName" xml:space="preserve">
    <value>JWT 인코더 및 디코더 도구</value>
    <comment>Gui</comment>
  </data>
  <data name="acr" xml:space="preserve">
    <value>값이 0인 "acr" 클레임은 최종 사용자 인증이 ISO/IEC 29115의 요구 사항을 충족하지 않았음을 나타냅니다.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="acrs" xml:space="preserve">
    <value>"acrs" 클레임은 전달자가 수행할 수 있는 작업의 인증 컨텍스트 ID를 나타냅니다. 인증 컨텍스트 ID는 애플리케이션 및 서비스 내에서 단계별 인증에 대한 요구를 트리거하는 데 사용될 수 있습니다. xms_cc 클레임과 함께 자주 사용됩니다.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="aio" xml:space="preserve">
    <value>"aio" 클레임은 토큰 재사용을 위해 데이터를 기록하기 위해 Microsoft Entra ID에서 사용하는 내부 클레임입니다. 리소스는 이 클레임을 사용하면 안 됩니다.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="alg" xml:space="preserve">
    <value>토큰 서명에 사용된 알고리즘을 나타냅니다.</value>
    <comment>Claim</comment>
  </data>
  <data name="AlgorithmInvalidEncodeTokenHasDefaultTimeTitle" xml:space="preserve">
    <value>알 수 없는 토큰 알고리즘</value>
    <comment>Error message</comment>
  </data>
  <data name="amr" xml:space="preserve">
    <value>"amr" 클레임은 토큰 주체의 인증 방법을 식별합니다.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="appid" xml:space="preserve">
    <value>"appid" 클레임은 토큰을 사용하는 클라이언트의 애플리케이션 ID를 나타냅니다. 애플리케이션은 그 자체로 작동하거나 사용자를 대신하여 작동할 수 있습니다. 애플리케이션 ID는 일반적으로 애플리케이션 개체를 나타내지만 Microsoft Entra ID의 서비스 주체 개체를 나타낼 수도 있습니다.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="appidacr" xml:space="preserve">
    <value>"appidacr" 클레임은 클라이언트의 인증 방법을 나타냅니다. 퍼블릭 클라이언트의 경우 값은 0입니다. 클라이언트 ID와 클라이언트 시크릿을 사용하는 경우 값은 1입니다. 인증을 위해 클라이언트 인증서를 사용하는 경우 값은 2입니다.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="aud" xml:space="preserve">
    <value>"aud"(대상) 클레임은 JWT가 의도하는 수신자를 식별합니다. JWT를 처리하려는 각 주체는 대상 클레임의 값으로 자신을 식별해야 합니다. 클레임을 처리하는 주체가 이 클레임이 있을 때 "aud" 클레임의 값으로 자신을 식별하지 않으면 JWT는 거부되어야 합니다. 일반적인 경우 "aud" 값은 대소문자를 구분하는 문자열의 배열이며 각 문자열에는 StringOrURI 값이 포함됩니다. JWT에 하나의 대상 그룹이 있는 특수한 경우 "aud" 값은 StringOrURI 값을 포함하는 대소문자를 구분하는 단일 문자열일 수 있습니다. 대상 값의 해석은 일반적으로 애플리케이션에 따라 다릅니다. 이 클레임의 사용은 선택 사항입니다.</value>
    <comment>Claim</comment>
  </data>
  <data name="azp" xml:space="preserve">
    <value>"azp" 클레임은 appid를 대체합니다. 토큰을 사용하는 클라이언트의 애플리케이션 ID입니다. 애플리케이션은 자체적으로 또는 사용자를 대신하여 작동할 수 있습니다. 애플리케이션 ID는 일반적으로 애플리케이션 개체를 나타내지만 Microsoft Entra ID에서 서비스 주체의 개체를 나타낼 수도 있습니다.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="azpacr" xml:space="preserve">
    <value>"azpacr" 클레임은 appidacr을 대체합니다. 클라이언트의 인증 방법을 나타냅니다. 공개 클라이언트의 경우 값은 0입니다. 클라이언트 ID와 클라이언트 비밀을 사용하는 경우 값은 1입니다. 클라이언트 인증서를 인증에 사용하는 경우 값은 2입니다.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="ClaimDescriptionTitle" xml:space="preserve">
    <value>설명</value>
    <comment>Gui</comment>
  </data>
  <data name="ClaimTypeTitle" xml:space="preserve">
    <value>유형</value>
    <comment>Gui</comment>
  </data>
  <data name="ClaimValueTitle" xml:space="preserve">
    <value>값</value>
    <comment>Gui</comment>
  </data>
  <data name="ConfigurationTitle" xml:space="preserve">
    <value>설정정</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeMode" xml:space="preserve">
    <value>디코드</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenActorsTitle" xml:space="preserve">
    <value>액터 유효성 검사</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenAudiencesInputLabel" xml:space="preserve">
    <value>토큰 대상 (쉼표로 구분)</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenAudiencesTitle" xml:space="preserve">
    <value>Validate audiences</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenIssuerInputLabel" xml:space="preserve">
    <value>토큰 발행자 (쉼표로 구분)</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenIssuerSigningKeyTitle" xml:space="preserve">
    <value>발급자 서명 키 유효성 검사</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenIssuerTitle" xml:space="preserve">
    <value>발급자 유효성 검사</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenLifetimeTitle" xml:space="preserve">
    <value>수명 유효성 검사</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenSettingsDescription" xml:space="preserve">
    <value>유효성을 검사할 토큰 매개변수 선택</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenSettingsTitle" xml:space="preserve">
    <value>토큰 유효성 검사 설정</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenTitle" xml:space="preserve">
    <value>토큰 유효성 검사</value>
    <comment>Gui</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Json 웹 토큰 인코딩 및 디코딩 </value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeMode" xml:space="preserve">
    <value>인코드</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenAlgorithmTitle" xml:space="preserve">
    <value>토큰 해싱 알고리즘</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenAudienceInputTitle" xml:space="preserve">
    <value>토큰 대상 (쉼표로 구분)</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenExpirationDayInputTitle" xml:space="preserve">
    <value>일 후 만료(s)</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenExpirationHourInputTitle" xml:space="preserve">
    <value>시간 후 만료(s)</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenExpirationMinuteInputTitle" xml:space="preserve">
    <value>분 후 만료(s)</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenExpirationMonthInputTitle" xml:space="preserve">
    <value>달 후 만료(s)</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenExpirationYearInputTitle" xml:space="preserve">
    <value>년 후 만료(s)</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenHasAudienceTitle" xml:space="preserve">
    <value>토큰에 오디언스가 있습니다.</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenHasExpirationTitle" xml:space="preserve">
    <value>토큰이 만료되었습니다.</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenHasIssuerTitle" xml:space="preserve">
    <value>토큰에 발행자가 있습니다.</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenIssuerInputTitle" xml:space="preserve">
    <value>토큰 발급자 (쉼표로 구분)</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenSettingsDescription" xml:space="preserve">
    <value>토큰 매개 변수 선택</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenSettingsTitle" xml:space="preserve">
    <value>설정</value>
    <comment>Gui</comment>
  </data>
  <data name="exp" xml:space="preserve">
    <value>"exp"(만료 시간) 클레임은 JWT 처리를 위해 허용되어서는 안 되는 만료 시간 또는 그 이후를 식별합니다. "만료" 클레임을 처리하려면 현재 날짜/시간이 "만료" 클레임에 표시된 만료 날짜/시간 이전이어야 합니다. 구현자는 시계 왜곡을 고려하기 위해 일반적으로 몇 분 이하의 약간의 여유를 제공할 수 있습니다. 이 값은 반드시 NumericDate 값을 포함하는 숫자여야 합니다. 이 클레임의 사용은 선택 사항입니다.</value>
    <comment>Claim</comment>
  </data>
  <data name="groups" xml:space="preserve">
    <value>"그룹" 클레임은 주체의 그룹 멤버십을 나타내는 개체 ID를 제공합니다. 응용 프로그램 매니페스트의 groupMembershipClaims 속성은 응용 프로그램별로 그룹 클레임을 구성합니다. null 값은 모든 그룹을 제외하고, SecurityGroup 값은 Active Directory 보안 그룹 멤버십만 포함하며, 모두 값은 보안 그룹과 Microsoft 365 배포 목록을 모두 포함합니다.암시적 부여와 함께 그룹 클레임을 사용하는 방법에 대한 자세한 내용은 hasgroups 클레임을 참조하세요. 다른 흐름의 경우, 사용자가 속한 그룹의 수가 SAML의 경우 150개, JWT의 경우 200개를 초과하면 Microsoft Entra ID는 클레임 소스에 초과 클레임을 추가합니다. 클레임 소스는 사용자에 대한 그룹 목록이 포함된 Microsoft Graph 엔드포인트를 가리킵니다.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="groups:src1" xml:space="preserve">
    <value>"groups:src1" 클레임에는 토큰 요청이 토큰에 비해 너무 큰 경우 사용자의 전체 그룹 목록에 대한 링크가 포함됩니다. 분산 클레임인 JWT의 경우, SAML의 경우 그룹 클레임 대신 새 클레임으로 사용됩니다.예 JWT 값:"groups":"src1""_claim_sources: "src1" : { "엔드포인트" : "https://graph.microsoft.com/v1.0/users/{userID}/getMemberObjects" }</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="hasgroups" xml:space="preserve">
    <value>존재하면 항상 true이며, 사용자가 하나 이상의 그룹에 속해 있는지 여부를 나타냅니다. 전체 그룹 클레임이 URL 길이 제한 (현재 6개 이상의 그룹)을 초과하여 URI 조각을 확장하는 경우 암시적 권한 부여 흐름에서 JWT에 대한 그룹 클레임 대신에 사용됩니다. 클라이언트가 Microsoft Graph API를 사용하여 사용자의 그룹 (https://graph.microsoft.com/v1.0/users/{userID}/getMemberObjects)을 확인해야 함을 나타냅니다.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="HeaderInputTitle" xml:space="preserve">
    <value>머리글</value>
    <comment>Gui</comment>
  </data>
  <data name="iat" xml:space="preserve">
    <value>"iat" (발행일) 클레임은 JWT가 발행된 시점을 식별합니다. 이 클레임은 JWT의 연령을 결정하는 데 사용할 수 있습니다. 이 값은 반드시 NumericDate 값을 포함하는 숫자여야 합니다. 이 클레임의 사용은 선택 사항입니다.</value>
    <comment>Claim</comment>
  </data>
  <data name="idp" xml:space="preserve">
    <value>"idp" 클레임은 토큰의 주체를 인증한 Id 공급자를 기록합니다. 이 값은 사용자 계정이 게스트와 같이 발급자와 동일한 테넌트에 속하지 않는 한 발급자 클레임의 값과 동일합니다. 클레임이 없는 경우 iss 값을 사용합니다.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="InvalidExpiration" xml:space="preserve">
    <value>만료 날짜가 잘못되었습니다</value>
    <comment>Error message</comment>
  </data>
  <data name="iss" xml:space="preserve">
    <value>The "iss" (issuer) claim identifies the principal that issued the JWT. The processing of this claim is generally application specific. The "iss" value is a case-sensitive string containing a StringOrURI value. Use of this claim is OPTIONAL.</value>
    <comment>Claim</comment>
  </data>
  <data name="jti" xml:space="preserve">
    <value>The "jti" (JWT ID) claim provides a unique identifier for the JWT. The identifier value MUST be assigned in a manner that ensures that there is a negligible probability that the same value will be accidentally assigned to a different data object; if the application uses multiple issuers, collisions MUST be prevented among values produced by different issuers as well. The "jti" claim can be used to prevent the JWT from being replayed. The "jti" value is a case- sensitive string. Use of this claim is OPTIONAL.</value>
    <comment>Claim</comment>
  </data>
  <data name="kid" xml:space="preserve">
    <value>Specifies the thumbprint for the public key used for validating the signature of the token.</value>
    <comment>Claim</comment>
  </data>
  <data name="LongDisplayTitle" xml:space="preserve">
    <value>JWT Encoder / Decoder</value>
    <comment>Gui</comment>
  </data>
  <data name="name" xml:space="preserve">
    <value>The "name" claim provides a human-readable value that identifies the subject of the token. The value can vary, it's mutable, and is for display purposes only. To receive this claim, use the profile scope.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="nbf" xml:space="preserve">
    <value>The "nbf" (not before) claim identifies the time before which the JWT MUST NOT be accepted for processing. The processing of the "nbf" claim requires that the current date/time MUST be after or equal to the not-before date/time listed in the "nbf" claim. Implementers MAY provide for some small leeway, usually no more than a few minutes, to account for clock skew. Its value MUST be a number containing a NumericDate value. Use of this claim is OPTIONAL.</value>
    <comment>Claim</comment>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
    <comment>Gui</comment>
  </data>
  <data name="oid" xml:space="preserve">
    <value>The immutable identifier for the requestor, which is the verified identity of the user or service principal. This ID uniquely identifies the requestor across applications. Two different applications signing in the same user receive the same value in the oid claim. The oid can be used when making queries to Microsoft online services, such as the Microsoft Graph. The Microsoft Graph returns this ID as the id property for a given user account. Because the oid allows multiple applications to correlate principals, to receive this claim for users use the profile scope. If a single user exists in multiple tenants, the user contains a different object ID in each tenant. Even though the user logs into each account with the same credentials, the accounts are different.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="PayloadInputTitle" xml:space="preserve">
    <value>Payload</value>
    <comment>Gui</comment>
  </data>
  <data name="preferred_username" xml:space="preserve">
    <value>The "preferred_username" claim indicate the primary username that represents the user. The value could be an email address, phone number, or a generic username without a specified format. Use the value for username hints and in human-readable UI as a username. To receive this claim, use the profile scope.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="PrivateKeyNotSupported" xml:space="preserve">
    <value>이 유형의 개인 키는 지원되지 않습니다</value>
    <comment>Error message</comment>
  </data>
  <data name="PublicKeyInputTitle" xml:space="preserve">
    <value>Public Key</value>
    <comment>Gui</comment>
  </data>
  <data name="PublicKeyNotSupported" xml:space="preserve">
    <value>This type of public key is not supported</value>
    <comment>Error message</comment>
  </data>
  <data name="rh" xml:space="preserve">
    <value>The "rh" claim is an internal claim used by Azure to revalidate tokens. Resources shouldn't use this claim.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="roles" xml:space="preserve">
    <value>The "roles" claim indicate the set of permissions exposed by the application that the requesting application or user has been given permission to call. The client credential flow uses this set of permission in place of user scopes for application tokens. For user tokens, this set of values contains the assigned roles of the user on the target application.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="scp" xml:space="preserve">
    <value>The "scp" claim indicate the set of scopes exposed by the application for which the client application has requested (and received) consent. Only included for user tokens.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="ShortDisplayTitle" xml:space="preserve">
    <value>JWT</value>
    <comment>Gui</comment>
  </data>
  <data name="SignatureInputTitle" xml:space="preserve">
    <value>Signature</value>
    <comment>Gui</comment>
  </data>
  <data name="sub" xml:space="preserve">
    <value>The "sub" (subject) claim identifies the principal that is the subject of the JWT. The claims in a JWT are normally statements about the subject.  The subject value MUST either be scoped to be locally unique in the context of the issuer or be globally unique. The processing of this claim is generally application specific. The "sub" value is a case-sensitive string containing a StringOrURI value.  Use of this claim is OPTIONAL.</value>
    <comment>Claim</comment>
  </data>
  <data name="tid" xml:space="preserve">
    <value>The "tid" claim represents the tenant that the user is signing in to. For work and school accounts, the GUID is the immutable tenant ID of the organization that the user is signing in to.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="TokenInputTitle" xml:space="preserve">
    <value>Token</value>
    <comment>Gui</comment>
  </data>
  <data name="TokenNotValidated" xml:space="preserve">
    <value>Token not validated (no parameters selected)</value>
    <comment>Error message</comment>
  </data>
  <data name="ToolModeDescription" xml:space="preserve">
    <value>Select which mode you want to use</value>
    <comment>Gui</comment>
  </data>
  <data name="ToolModeTitle" xml:space="preserve">
    <value>Tool Mode</value>
    <comment>Gui</comment>
  </data>
  <data name="typ" xml:space="preserve">
    <value>Indicates the token type</value>
    <comment>Claim</comment>
  </data>
  <data name="unique_name" xml:space="preserve">
    <value>The "unique_name" claim provides a human readable value that identifies the subject of the token.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="uti" xml:space="preserve">
    <value>The "uti" claim (Token identifier claim), is equivalent to "jti" in the JWT specification. Unique, per-token identifier that is case-sensitive.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="ValidAudiencesEmptyError" xml:space="preserve">
    <value>Audiences are empty or invalid</value>
    <comment>Error message</comment>
  </data>
  <data name="ValidIssuersEmptyError" xml:space="preserve">
    <value>Issuers are empty or invalid</value>
    <comment>Error message</comment>
  </data>
  <data name="ver" xml:space="preserve">
    <value>The "ver" claim indicates the version of the access token.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="wids" xml:space="preserve">
    <value>The "wids" claim denotes the tenant-wide roles assigned to this user, from the section of roles present in Microsoft Entra built-in roles. The groupMembershipClaims property of the application manifest configures this claim on a per-application basis. Set the claim to All or DirectoryRole. May not be present in tokens obtained through the implicit flow due to token length concerns.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="x5t" xml:space="preserve">
    <value>Functions the same as "kid". "x5t" is a legacy claim emitted only in v1.0 access tokens for compatibility purposes.</value>
    <comment>Claim</comment>
  </data>
  <data name="xms_cc" xml:space="preserve">
    <value>The "xms_cc" claim indicates whether the client application that acquired the token is capable of handling claims challenges. It's often used along with claim acrs. This claim is commonly used in Conditional Access and Continuous Access Evaluation scenarios. The resource server or service application that the token is issued for controls the presence of this claim in a token. A value of cp1 in the access token is the authoritative way to identify that a client application is capable of handling a claims challenge.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenHasDefaultTimeTitle" xml:space="preserve">
    <value>Token has default time</value>
    <comment>Gui</comment>
  </data>
  <data name="InvalidHeader" xml:space="preserve">
    <value>Unable to process the token header</value>
    <comment>Error message</comment>
  </data>
  <data name="InvalidPayload" xml:space="preserve">
    <value>Unable to process the token payload</value>
    <comment>Error message</comment>
  </data>
  <data name="InvalidPrivateKey" xml:space="preserve">
    <value>Private key is either null or empty</value>
    <comment>Error message</comment>
  </data>
  <data name="InvalidPublicKey" xml:space="preserve">
    <value>Public key is either null or empty</value>
    <comment>Error message</comment>
  </data>
  <data name="PrivateKeyInputTitle" xml:space="preserve">
    <value>Private Key</value>
    <comment>Gui</comment>
  </data>
  <data name="ValidToken" xml:space="preserve">
    <value>Token Validated</value>
    <comment>Gui</comment>
  </data>
  <data name="InvalidSignature" xml:space="preserve">
    <value>Unable to process the token signature</value>
    <comment>Error message</comment>
  </data>
  <data name="Base64" xml:space="preserve">
    <value>Base64</value>
    <comment>Gui</comment>
  </data>
  <data name="PlainText" xml:space="preserve">
    <value>Plain text</value>
    <comment>Gui</comment>
  </data>
  <data name="SignatureFormat" xml:space="preserve">
    <value>Signature format</value>
    <comment>Gui</comment>
  </data>
  <data name="InvalidDateValue" xml:space="preserve">
    <value>Date is an invalid value.</value>
    <comment>Error message</comment>
  </data>
</root>