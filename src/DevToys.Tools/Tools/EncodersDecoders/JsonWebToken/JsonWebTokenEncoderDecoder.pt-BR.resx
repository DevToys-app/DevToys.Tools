<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessibleName" xml:space="preserve">
    <value>Ferramenta de Codificador e Decodificador JWT</value>
    <comment>Gui</comment>
  </data>
  <data name="acr" xml:space="preserve">
    <value>A declaração "acr" com valor 0 indica que a autenticação do usuário final não cumpriu os requisitos da norma ISO/IEC 29115.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="acrs" xml:space="preserve">
    <value>A declaração "acrs" indica os IDs de Contexto de Autenticação das operações que o portador tem permissão para realizar. Os IDs de Contexto de Autenticação podem ser usados para acionar uma solicitação de autenticação em etapas dentro do seu aplicativo e serviços. Frequentemente usada em conjunto com a declaração xms_cc.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="aio" xml:space="preserve">
    <value>A declaração "aio" é uma declaração interna utilizada pelo Microsoft Entra ID para registrar dados para reutilização de token. Os recursos não devem utilizar esta declaração.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="alg" xml:space="preserve">
    <value>Indica o algoritmo usado para assinar o token</value>
    <comment>Claim</comment>
  </data>
  <data name="AlgorithmInvalidEncodeTokenHasDefaultTimeTitle" xml:space="preserve">
    <value>Algoritmo de token desconhecido</value>
    <comment>Error message</comment>
  </data>
  <data name="amr" xml:space="preserve">
    <value>A declaração "amr" identifica o método de autenticação do titular do token.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="appid" xml:space="preserve">
    <value>A declaração "appid" indica o ID do aplicativo do cliente que está usando o token. O aplicativo pode agir como ele mesmo ou em nome de um usuário. O ID do aplicativo geralmente representa um objeto de aplicativo, mas também pode representar um objeto de entidade de serviço no Microsoft Entra ID.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="appidacr" xml:space="preserve">
    <value>A declaração "appidacr" indica o método de autenticação do cliente. Para um cliente público, o valor é 0. Quando você usa o ID do cliente e o segredo do cliente, o valor é 1. Quando você usa um certificado de cliente para autenticação, o valor é 2.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="aud" xml:space="preserve">
    <value>A declaração "aud" (audiência) identifica os destinatários para os quais o JWT se destina. Cada entidade que pretende processar o JWT DEVE se identificar com um valor na declaração de audiência. Se a entidade que processa a declaração não se identificar com um valor na declaração "aud" quando esta declaração estiver presente, o JWT DEVE ser rejeitado. No caso geral, o valor "aud" é um array de strings que diferenciam maiúsculas de minúsculas, cada uma contendo um valor StringOrURI. No caso especial em que o JWT tem um único destinatário, o valor "aud" PODE ser uma única string que diferencia maiúsculas de minúsculas, contendo um valor StringOrURI. A interpretação dos valores de audiência é geralmente específica do aplicativo. O uso desta declaração é OPCIONAL.</value>
    <comment>Claim</comment>
  </data>
  <data name="azp" xml:space="preserve">
    <value>A declaração "azp" é um substituto para appid. O ID do aplicativo do cliente que está usando o token. O aplicativo pode agir como ele mesmo ou em nome de um usuário. O ID do aplicativo geralmente representa um objeto de aplicativo, mas também pode representar um objeto de entidade de serviço no Microsoft Entra ID.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="azpacr" xml:space="preserve">
    <value>A declaração "azpacr" é um substituto para appidacr. Indica o método de autenticação do cliente. Para um cliente público, o valor é 0. Quando você usa o ID do cliente e o segredo do cliente, o valor é 1. Quando você usa um certificado de cliente para autenticação, o valor é 2.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="ClaimDescriptionTitle" xml:space="preserve">
    <value>Descrição</value>
    <comment>Gui</comment>
  </data>
  <data name="ClaimTypeTitle" xml:space="preserve">
    <value>Tipo</value>
    <comment>Gui</comment>
  </data>
  <data name="ClaimValueTitle" xml:space="preserve">
    <value>Valor</value>
    <comment>Gui</comment>
  </data>
  <data name="ConfigurationTitle" xml:space="preserve">
    <value>Configuração</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeMode" xml:space="preserve">
    <value>Decodificar</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenActorsTitle" xml:space="preserve">
    <value>Validar atores</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenAudiencesInputLabel" xml:space="preserve">
    <value>Audiências do token (separadas por vírgula)</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenAudiencesTitle" xml:space="preserve">
    <value>Validar audiências</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenIssuerInputLabel" xml:space="preserve">
    <value>Emissor do token (separado por vírgula)</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenIssuerSigningKeyTitle" xml:space="preserve">
    <value>Validar chave de assinatura do emissor</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenIssuerTitle" xml:space="preserve">
    <value>Validar emissor</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenLifetimeTitle" xml:space="preserve">
    <value>Validar tempo de vida</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenSettingsDescription" xml:space="preserve">
    <value>Selecione quais parâmetros de token validar</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenSettingsTitle" xml:space="preserve">
    <value>Configurações de validação de token</value>
    <comment>Gui</comment>
  </data>
  <data name="DecodeValidateTokenTitle" xml:space="preserve">
    <value>Validar Token</value>
    <comment>Gui</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Codificar e decodificar Json Web Token </value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeMode" xml:space="preserve">
    <value>Codificar</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenAlgorithmTitle" xml:space="preserve">
    <value>Algoritmo de hash do token</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenAudienceInputTitle" xml:space="preserve">
    <value>Público do token (separado por vírgula)</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenExpirationDayInputTitle" xml:space="preserve">
    <value>Expirar em dia(s)</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenExpirationHourInputTitle" xml:space="preserve">
    <value>Expirar em hora(s)</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenExpirationMinuteInputTitle" xml:space="preserve">
    <value>Expirar em minuto(s)</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenExpirationMonthInputTitle" xml:space="preserve">
    <value>Expirar em mês(es)</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenExpirationYearInputTitle" xml:space="preserve">
    <value>Expirar em ano(s)</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenHasAudienceTitle" xml:space="preserve">
    <value>Token tem público</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenHasExpirationTitle" xml:space="preserve">
    <value>Token possui expiração</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenHasIssuerTitle" xml:space="preserve">
    <value>Token tem emissor</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenIssuerInputTitle" xml:space="preserve">
    <value>Emissor do token (separado por vírgula)</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenSettingsDescription" xml:space="preserve">
    <value>Selecione os parâmetros do token</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenSettingsTitle" xml:space="preserve">
    <value>Configurações</value>
    <comment>Gui</comment>
  </data>
  <data name="exp" xml:space="preserve">
    <value>A declaração "exp" (tempo de expiração) identifica o momento em que ou após o qual o JWT NÃO DEVE ser aceito para processamento. O processamento da declaração "exp" exige que a data/hora atual DEVE ser anterior à data/hora de expiração listada na declaração "exp". Os implementadores PODEM fornecer uma pequena margem de tolerância, geralmente não mais do que alguns minutos, para considerar a diferença de relógio. Seu valor DEVE ser um número contendo um valor NumericDate. O uso desta declaração é OPCIONAL.</value>
    <comment>Claim</comment>
  </data>
  <data name="groups" xml:space="preserve">
    <value>A declaração "groups" fornece IDs de objeto que representam as associações de grupo do titular. A propriedade groupMembershipClaims do manifesto do aplicativo configura a declaração de grupos por aplicativo. Um valor nulo exclui todos os grupos, um valor SecurityGroup inclui apenas associações a Grupos de Segurança do Active Directory e um valor All inclui tanto Grupos de Segurança quanto Listas de Distribuição do Microsoft 365. Consulte a declaração hasgroups para obter detalhes sobre o uso da declaração groups com a concessão implícita. Para outros fluxos, se o número de grupos aos quais o usuário pertence ultrapassar 150 para SAML e 200 para JWT, o Microsoft Entra ID adiciona uma declaração de excesso às origens das declarações. As origens das declarações apontam para o endpoint do Microsoft Graph que contém a lista de grupos para o usuário.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="groups:src1" xml:space="preserve">
    <value>A declaração "groups:src1" inclui um link para a lista completa de grupos do usuário quando as solicitações de token são muito grandes para o token. Para JWTs, como uma declaração distribuída, para SAML como uma nova declaração no lugar da declaração de grupos. Exemplo de valor JWT: "groups": "src1" "_claim_sources: "src1": {"endpoint": "https://graph.microsoft.com/v1.0/users/{userID}/getMemberObjects"}</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="hasgroups" xml:space="preserve">
    <value>Se presente, sempre verdadeiro, indica se o usuário está em pelo menos um grupo. Usado no lugar da declaração de grupos para JWTs em fluxos de concessão implícita se a declaração de grupos completa estender o fragmento URI além dos limites de comprimento da URL (atualmente seis ou mais grupos). Indica que o cliente deve usar a API do Microsoft Graph para determinar os grupos (https://graph.microsoft.com/v1.0/users/{userID}/getMemberObjects) do usuário.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="HeaderInputTitle" xml:space="preserve">
    <value>Cabeçalho</value>
    <comment>Gui</comment>
  </data>
  <data name="iat" xml:space="preserve">
    <value>A declaração "iat" (emitido em) identifica o momento em que o JWT foi emitido. Esta declaração pode ser usada para determinar a idade do JWT. Seu valor DEVE ser um número contendo um valor NumericDate. O uso desta declaração é OPCIONAL.</value>
    <comment>Claim</comment>
  </data>
  <data name="idp" xml:space="preserve">
    <value>A declaração "idp" registra o provedor de identidade que autenticou o titular do token. Este valor é idêntico ao valor da declaração Issuer, a menos que a conta do usuário não esteja no mesmo locatário que o emissor, como no caso de convidados. Use o valor de "iss" se a declaração não estiver presente.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="InvalidExpiration" xml:space="preserve">
    <value>Data de expiração inválida</value>
    <comment>Error message</comment>
  </data>
  <data name="iss" xml:space="preserve">
    <value>A declaração "iss" (emissor) identifica a entidade que emitiu o JWT. O processamento desta declaração é geralmente específico do aplicativo. O valor "iss" é uma string que diferencia maiúsculas de minúsculas, contendo um valor StringOrURI. O uso desta declaração é OPCIONAL.</value>
    <comment>Claim</comment>
  </data>
  <data name="jti" xml:space="preserve">
    <value>A declaração "jti" (ID do JWT) fornece um identificador único para o JWT. O valor do identificador DEVE ser atribuído de forma a garantir que haja uma probabilidade insignificante de que o mesmo valor seja acidentalmente atribuído a um objeto de dados diferente; se o aplicativo usar vários emissores, as colisões também DEVEM ser evitadas entre os valores produzidos por diferentes emissores. A declaração "jti" pode ser usada para impedir que o JWT seja reproduzido. O valor "jti" é uma string que diferencia maiúsculas de minúsculas. O uso desta declaração é OPCIONAL.</value>
    <comment>Claim</comment>
  </data>
  <data name="kid" xml:space="preserve">
    <value>Especifica a impressão digital para a chave pública usada para validar a assinatura do token.</value>
    <comment>Claim</comment>
  </data>
  <data name="LongDisplayTitle" xml:space="preserve">
    <value>Codificador / Decodificador JWT</value>
    <comment>Gui</comment>
  </data>
  <data name="name" xml:space="preserve">
    <value>A declaração "name" fornece um valor legível que identifica o titular do token. O valor pode variar, é mutável e serve apenas para fins de exibição. Para receber esta declaração, use o escopo profile.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="nbf" xml:space="preserve">
    <value>A declaração "nbf" (não antes de) identifica o momento antes do qual o JWT NÃO DEVE ser aceito para processamento. O processamento da declaração "nbf" exige que a data/hora atual DEVE ser posterior ou igual à data/hora especificada na declaração "nbf". Os implementadores PODEM fornecer uma pequena margem de tolerância, geralmente não mais do que alguns minutos, para considerar a diferença de relógio. Seu valor DEVE ser um número contendo um valor NumericDate. O uso desta declaração é OPCIONAL.</value>
    <comment>Claim</comment>
  </data>
  <data name="No" xml:space="preserve">
    <value>Não</value>
    <comment>Gui</comment>
  </data>
  <data name="oid" xml:space="preserve">
    <value>O identificador imutável para o solicitante, que é a identidade verificada do usuário ou entidade de serviço. Este ID identifica exclusivamente o solicitante em todos os aplicativos. Dois aplicativos diferentes que autenticam o mesmo usuário recebem o mesmo valor na declaração oid. O oid pode ser usado ao fazer consultas a serviços online da Microsoft, como o Microsoft Graph. O Microsoft Graph retorna este ID como a propriedade id para uma determinada conta de usuário. Como o oid permite que vários aplicativos correlacionem entidades, para receber esta declaração para usuários, use o escopo profile. Se um único usuário existir em vários locatários, o usuário conterá um ID de objeto diferente em cada locatário. Mesmo que o usuário faça login em cada conta com as mesmas credenciais, as contas são diferentes.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="PayloadInputTitle" xml:space="preserve">
    <value>Carga útil</value>
    <comment>Gui</comment>
  </data>
  <data name="preferred_username" xml:space="preserve">
    <value>A declaração "preferred_username" indica o nome de usuário principal que representa o usuário. O valor pode ser um endereço de e-mail, número de telefone ou um nome de usuário genérico sem um formato específico. Use o valor para dicas de nome de usuário e em interfaces de usuário legíveis por humanos como um nome de usuário. Para receber esta declaração, use o escopo "profile".</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="PrivateKeyNotSupported" xml:space="preserve">
    <value>Este tipo de chave privada não é compatível</value>
    <comment>Error message</comment>
  </data>
  <data name="PublicKeyInputTitle" xml:space="preserve">
    <value>Chave pública</value>
    <comment>Gui</comment>
  </data>
  <data name="PublicKeyNotSupported" xml:space="preserve">
    <value>Este tipo de chave pública não é compatível</value>
    <comment>Error message</comment>
  </data>
  <data name="rh" xml:space="preserve">
    <value>A declaração "rh" é uma declaração interna utilizada pelo Azure para revalidar tokens. Os recursos não devem utilizar esta declaração.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="roles" xml:space="preserve">
    <value>A declaração "roles" indica o conjunto de permissões expostas pelo aplicativo para as quais o aplicativo solicitante ou usuário recebeu permissão para chamar. O fluxo de credenciais do cliente usa este conjunto de permissões no lugar dos escopos de usuário para tokens de aplicativo. Para tokens de usuário, este conjunto de valores contém as funções atribuídas ao usuário no aplicativo de destino.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="scp" xml:space="preserve">
    <value>A declaração "scp" indica o conjunto de escopos expostos pelo aplicativo para os quais o aplicativo cliente solicitou (e recebeu) consentimento. Incluído apenas para tokens de usuário.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="ShortDisplayTitle" xml:space="preserve">
    <value>JWT</value>
    <comment>Gui</comment>
  </data>
  <data name="SignatureInputTitle" xml:space="preserve">
    <value>Assinatura</value>
    <comment>Gui</comment>
  </data>
  <data name="sub" xml:space="preserve">
    <value>A declaração "sub" (sujeito) identifica a entidade que é o sujeito do JWT. As declarações em um JWT são normalmente afirmações sobre o sujeito. O valor do sujeito DEVE ser delimitado para ser localmente único no contexto do emissor ou ser globalmente único. O processamento desta declaração é geralmente específico do aplicativo. O valor "sub" é uma string que diferencia maiúsculas de minúsculas, contendo um valor StringOrURI. O uso desta declaração é OPCIONAL.</value>
    <comment>Claim</comment>
  </data>
  <data name="tid" xml:space="preserve">
    <value>A declaração "tid" representa o locatário no qual o usuário está se autenticando. Para contas corporativas ou de estudante, o GUID é o ID imutável do locatário da organização na qual o usuário está se autenticando.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="TokenInputTitle" xml:space="preserve">
    <value>Token</value>
    <comment>Gui</comment>
  </data>
  <data name="TokenNotValidated" xml:space="preserve">
    <value>Token não validado (nenhum parâmetro selecionado)</value>
    <comment>Error message</comment>
  </data>
  <data name="ToolModeDescription" xml:space="preserve">
    <value>Selecione o modo que você deseja usar</value>
    <comment>Gui</comment>
  </data>
  <data name="ToolModeTitle" xml:space="preserve">
    <value>Modo da ferramenta</value>
    <comment>Gui</comment>
  </data>
  <data name="typ" xml:space="preserve">
    <value>Indica o tipo de token</value>
    <comment>Claim</comment>
  </data>
  <data name="unique_name" xml:space="preserve">
    <value>A declaração "unique_name" fornece um valor legível por humanos que identifica o titular do token.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="uti" xml:space="preserve">
    <value>A declaração "uti" (declaração de identificador de token) é equivalente a "jti" na especificação JWT. Identificador único, por token, que diferencia maiúsculas de minúsculas.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="ValidAudiencesEmptyError" xml:space="preserve">
    <value>Audiências estão vazias ou inválidas</value>
    <comment>Error message</comment>
  </data>
  <data name="ValidIssuersEmptyError" xml:space="preserve">
    <value>Os emissores estão vazios ou inválidos</value>
    <comment>Error message</comment>
  </data>
  <data name="ver" xml:space="preserve">
    <value>A declaração "ver" indica a versão do token de acesso.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="wids" xml:space="preserve">
    <value>A declaração "wids" denota as funções atribuídas a este usuário em todo o locatário, da seção de funções presentes nas funções internas do Microsoft Entra. A propriedade groupMembershipClaims do manifesto do aplicativo configura esta declaração por aplicativo. Defina a declaração como All (Todas) ou DirectoryRole (Função de Diretório). Pode não estar presente em tokens obtidos através do fluxo implícito devido a preocupações com o comprimento do token.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="x5t" xml:space="preserve">
    <value>Funciona da mesma forma que "kid". "x5t" é uma declaração legada emitida apenas em tokens de acesso v1.0 para fins de compatibilidade.</value>
    <comment>Claim</comment>
  </data>
  <data name="xms_cc" xml:space="preserve">
    <value>A declaração "xms_cc" indica se o aplicativo cliente que adquiriu o token é capaz de lidar com desafios de declarações. É frequentemente usada em conjunto com a declaração "acrs". Esta declaração é comumente usada em cenários de Acesso Condicional e Avaliação Contínua de Acesso. O servidor de recursos ou aplicativo de serviço para o qual o token é emitido controla a presença desta declaração em um token. Um valor de "cp1" no token de acesso é a maneira autorizada de identificar que um aplicativo cliente é capaz de lidar com um desafio de declarações.</value>
    <comment>Claim (Microsoft)</comment>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Sim</value>
    <comment>Gui</comment>
  </data>
  <data name="EncodeTokenHasDefaultTimeTitle" xml:space="preserve">
    <value>O token tem hora padrão</value>
    <comment>Gui</comment>
  </data>
  <data name="InvalidHeader" xml:space="preserve">
    <value>Não foi possível processar o cabeçalho do token</value>
    <comment>Error message</comment>
  </data>
  <data name="InvalidPayload" xml:space="preserve">
    <value>Não foi possível processar o conteúdo do token</value>
    <comment>Error message</comment>
  </data>
  <data name="InvalidPrivateKey" xml:space="preserve">
    <value>A chave privada é nula ou vazia</value>
    <comment>Error message</comment>
  </data>
  <data name="InvalidPublicKey" xml:space="preserve">
    <value>A chave pública é nula ou vazia</value>
    <comment>Error message</comment>
  </data>
  <data name="PrivateKeyInputTitle" xml:space="preserve">
    <value>Chave privada</value>
    <comment>Gui</comment>
  </data>
  <data name="ValidToken" xml:space="preserve">
    <value>Token Validado</value>
    <comment>Gui</comment>
  </data>
  <data name="InvalidSignature" xml:space="preserve">
    <value>Não foi possível processar a assinatura do token</value>
    <comment>Error message</comment>
  </data>
  <data name="Base64" xml:space="preserve">
    <value>Base64</value>
    <comment>Gui</comment>
  </data>
  <data name="PlainText" xml:space="preserve">
    <value>Texto simples</value>
    <comment>Gui</comment>
  </data>
  <data name="SignatureFormat" xml:space="preserve">
    <value>Formato de assinatura</value>
    <comment>Gui</comment>
  </data>
  <data name="InvalidDateValue" xml:space="preserve">
    <value>Date is an invalid value.</value>
    <comment>Error message</comment>
  </data>
</root>