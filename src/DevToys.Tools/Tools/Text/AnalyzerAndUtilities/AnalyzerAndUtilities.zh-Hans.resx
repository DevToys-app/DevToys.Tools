<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessibleName" xml:space="preserve">
    <value>文本分析、转换和实用工具</value>
  </data>
  <data name="ActionsOptionDescription" xml:space="preserve">
    <value>输入文本的处理序列。处理动作以其被选择的先后顺序执行。</value>
  </data>
  <data name="Alphabetize" xml:space="preserve">
    <value>按字母升序</value>
  </data>
  <data name="AlphabetizeLast" xml:space="preserve">
    <value>按最后一个单词字母升序</value>
  </data>
  <data name="AlternatingCase" xml:space="preserve">
    <value>大小写交替（aLtErNaTiNg cAsE）</value>
  </data>
  <data name="Bytes" xml:space="preserve">
    <value>字节</value>
  </data>
  <data name="CamelCase" xml:space="preserve">
    <value>小驼峰（camelCase）</value>
  </data>
  <data name="CharacterFrequency" xml:space="preserve">
    <value>字符频率</value>
  </data>
  <data name="Characters" xml:space="preserve">
    <value>字符</value>
  </data>
  <data name="CobolCase" xml:space="preserve">
    <value>COBOL（COBOL-CASE）</value>
  </data>
  <data name="ConstantCase" xml:space="preserve">
    <value>常量大写（CONSTANT_CASE）</value>
  </data>
  <data name="ConvertCase" xml:space="preserve">
    <value>转换大小写</value>
  </data>
  <data name="ConvertEndOfLineSequence" xml:space="preserve">
    <value>转换换行符</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>进行文本分析并提供一些基础实用工具</value>
  </data>
  <data name="EndOfLineSequence" xml:space="preserve">
    <value>换行符</value>
  </data>
  <data name="EndOfLineSequenceCR" xml:space="preserve">
    <value>CR (\r)</value>
  </data>
  <data name="EndOfLineSequenceCRLF" xml:space="preserve">
    <value>CRLF (\r\n)</value>
  </data>
  <data name="EndOfLineSequenceLF" xml:space="preserve">
    <value>LF (\n)</value>
  </data>
  <data name="EndOfLineSequenceMixed" xml:space="preserve">
    <value>混合</value>
  </data>
  <data name="EndOfLineSequenceUnknown" xml:space="preserve">
    <value>未知</value>
  </data>
  <data name="InputFileNotFound" xml:space="preserve">
    <value>选择的输入文件不存在。</value>
  </data>
  <data name="InputOptionDescription" xml:space="preserve">
    <value>要处理的文本或文件路径。</value>
  </data>
  <data name="InvalidInputOrFileCommand" xml:space="preserve">
    <value>请指定输入文本或输入文件</value>
  </data>
  <data name="InverseCase" xml:space="preserve">
    <value>反向大小写交替（InVeRsE CaSe）</value>
  </data>
  <data name="KebabCase" xml:space="preserve">
    <value>短横线（kebab-case）</value>
  </data>
  <data name="Lines" xml:space="preserve">
    <value>行</value>
  </data>
  <data name="LongDisplayTitle" xml:space="preserve">
    <value>文本分析和实用工具</value>
  </data>
  <data name="LowerCase" xml:space="preserve">
    <value>全小写（lower case）</value>
  </data>
  <data name="OutputFileOptionDescription" xml:space="preserve">
    <value>输出文件路径</value>
  </data>
  <data name="Paragraphs" xml:space="preserve">
    <value>段落</value>
  </data>
  <data name="PascalCase" xml:space="preserve">
    <value>大驼峰（PascalCase）</value>
  </data>
  <data name="RandomCase" xml:space="preserve">
    <value>随机（raNdoM cASe）</value>
  </data>
  <data name="Randomize" xml:space="preserve">
    <value>随机</value>
  </data>
  <data name="Reverse" xml:space="preserve">
    <value>反转</value>
  </data>
  <data name="ReverseAlphabetize" xml:space="preserve">
    <value>按字母降序</value>
  </data>
  <data name="ReverseAlphabetizeLast" xml:space="preserve">
    <value>按最后一个单词字母降序</value>
  </data>
  <data name="SearchKeywords" xml:space="preserve">
    <value>文本</value>
  </data>
  <data name="SelectionColumnNumber" xml:space="preserve">
    <value>列</value>
  </data>
  <data name="SelectionEndPosition" xml:space="preserve">
    <value>结束位置</value>
  </data>
  <data name="SelectionLength" xml:space="preserve">
    <value>长度</value>
  </data>
  <data name="SelectionLineNumber" xml:space="preserve">
    <value>行</value>
  </data>
  <data name="SelectionStartPosition" xml:space="preserve">
    <value>起始位置</value>
  </data>
  <data name="SelectionStatistics" xml:space="preserve">
    <value>选区</value>
  </data>
  <data name="SentenceCase" xml:space="preserve">
    <value>句首大写（Sentence case）</value>
  </data>
  <data name="Sentences" xml:space="preserve">
    <value>句子</value>
  </data>
  <data name="ShortDisplayTitle" xml:space="preserve">
    <value>文本分析和实用工具</value>
  </data>
  <data name="ShowOriginalText" xml:space="preserve">
    <value>显示原文</value>
  </data>
  <data name="SnakeCase" xml:space="preserve">
    <value>蛇形（snake_case）</value>
  </data>
  <data name="SortLines" xml:space="preserve">
    <value>行排序</value>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>统计数据</value>
  </data>
  <data name="StatisticTitle" xml:space="preserve">
    <value>标题</value>
  </data>
  <data name="StatisticValue" xml:space="preserve">
    <value>值</value>
  </data>
  <data name="TextInput" xml:space="preserve">
    <value>文本</value>
  </data>
  <data name="TextStatistics" xml:space="preserve">
    <value>文本</value>
  </data>
  <data name="TitleCase" xml:space="preserve">
    <value>首字母大写（Title Case）</value>
  </data>
  <data name="TrainCase" xml:space="preserve">
    <value>火车式（Train-Case）</value>
  </data>
  <data name="UpperCase" xml:space="preserve">
    <value>全大写（UPPER CASE）</value>
  </data>
  <data name="WordFrequency" xml:space="preserve">
    <value>单词频率</value>
  </data>
  <data name="Words" xml:space="preserve">
    <value>单词</value>
  </data>
</root>