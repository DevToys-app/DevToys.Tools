<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessibleName" xml:space="preserve">
    <value>日期转换工具</value>
  </data>
  <data name="DaylightSavingTime" xml:space="preserve">
    <value>夏令时。</value>
  </data>
  <data name="DayTitle" xml:space="preserve">
    <value>日</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>将时间戳转换为人类可读的日期，或相反</value>
  </data>
  <data name="DisabledDaylightSavingTime" xml:space="preserve">
    <value>未实行夏令时。</value>
  </data>
  <data name="DSTAmbiguousTime" xml:space="preserve">
    <value>夏令时模糊时间。</value>
  </data>
  <data name="HourTitle" xml:space="preserve">
    <value>小时（24小时制）</value>
  </data>
  <data name="TimeZoneTitle" xml:space="preserve">
    <value>时区</value>
  </data>
  <data name="LocalDateTime" xml:space="preserve">
    <value>本地日期和时间</value>
  </data>
  <data name="MinutesTitle" xml:space="preserve">
    <value>分</value>
  </data>
  <data name="MonthTitle" xml:space="preserve">
    <value>月</value>
  </data>
  <data name="OffsetTitle" xml:space="preserve">
    <value>偏移</value>
  </data>
  <data name="SearchKeywords" xml:space="preserve">
    <value>时间 日期 时区 Epoch 时间戳 Ticks</value>
    <comment>Alternative search keywords. Enables searching for words that are not included in Description, MenuDisplayName, and SearchDisplayName.</comment>
  </data>
  <data name="SecondsTitle" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="SupportsDaylightSavingTime" xml:space="preserve">
    <value>实行夏令时。</value>
  </data>
  <data name="TimestampTitle" xml:space="preserve">
    <value>日期</value>
  </data>
  <data name="UTCDateTime" xml:space="preserve">
    <value>协调世界时（UTC）</value>
  </data>
  <data name="UtcTicksTitle" xml:space="preserve">
    <value>UTC 时间戳</value>
  </data>
  <data name="YearTitle" xml:space="preserve">
    <value>年</value>
  </data>
  <data name="Now" xml:space="preserve">
    <value>当前时间</value>
  </data>
  <data name="LongDisplayTitle" xml:space="preserve">
    <value>日期转换器</value>
  </data>
  <data name="ShortDisplayTitle" xml:space="preserve">
    <value>日期</value>
  </data>
  <data name="EpochSwitchTitle" xml:space="preserve">
    <value>时戳原点</value>
  </data>
  <data name="EpochSwitchDescription" xml:space="preserve">
    <value>使用自定义的时戳原点</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="MillisecondsTitle" xml:space="preserve">
    <value>毫秒</value>
  </data>
  <data name="FormatTitle" xml:space="preserve">
    <value>格式</value>
  </data>
  <data name="Ticks" xml:space="preserve">
    <value>刻</value>
  </data>
  <data name="Seconds" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="Milliseconds" xml:space="preserve">
    <value>毫秒</value>
  </data>
  <data name="DateOptionDescription" xml:space="preserve">
    <value>要转换的日期。支持格式：“ISO 8601”，示例：2023-11-22T19:58:07.0000000+00:00</value>
    <comment>CLI parameter description</comment>
  </data>
  <data name="EpochOptionDescription" xml:space="preserve">
    <value>时间戳原点。支持格式：“ISO 8601”，示例：1970-01-01T00:00:00.0000000+00:00</value>
    <comment>CLI parameter description</comment>
  </data>
  <data name="FormatOptionDescription" xml:space="preserve">
    <value>使用的格式，默认为秒</value>
    <comment>CLI parameter description</comment>
  </data>
  <data name="InputDescription" xml:space="preserve">
    <value>要转换的输入，可为长整型或日期。支持格式：“ISO 8601”，示例：2023-11-22T19:58:07.0000000+00:00</value>
    <comment>CLI parameter description</comment>
  </data>
  <data name="TimezoneOptionDescription" xml:space="preserve">
    <value>使用的时区（支持的时区： https://learn.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones#time-zones ）。</value>
    <comment>CLI parameter description</comment>
  </data>
  <data name="InvalidDateTimeCommand" xml:space="preserve">
    <value>无法解析日期</value>
    <comment>CLI error message</comment>
  </data>
  <data name="InvalidEpochCommand" xml:space="preserve">
    <value>无法解析时间戳原点</value>
    <comment>CLI error message</comment>
  </data>
  <data name="InvalidTimeZoneCommand" xml:space="preserve">
    <value>无法找到指定时区。请确认时区是否存在于此：https://learn.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones#time-zones</value>
    <comment>CLI error message</comment>
  </data>
  <data name="InvalidValue" xml:space="preserve">
    <value>请输入数字或日期</value>
  </data>
</root>